<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F11%2F17%2F%E7%82%B9%E4%BA%91%E5%A4%84%E7%90%86%E6%9D%82%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[点云可视化拟合平面已经使用RANDRAC拟合出了所有平面，但是每个平面都有多个拟合平面参数]]></content>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2019%2F11%2F17%2F%E7%82%B9%E4%BA%91%E5%A4%84%E7%90%86%E6%9D%82%E8%AE%B0%E7%9A%84%E5%89%AF%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[点云可视化拟合平面已经使用RANDRAC拟合出了所有平面，但是每个平面都有多个拟合平面参数]]></content>
  </entry>
  <entry>
    <title><![CDATA[我与Mac的365天]]></title>
    <url>%2F2018%2F10%2F18%2F%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[我与Mac的365天 2018年11月12日，我最终放弃了购买Surface Book2放弃了在某宝双十一购买mac，老老实实在官网上使用教育优惠购买了一台2017款15英寸Macbook Pro(带bar),时隔一年，重度使用下有很多很多的感受，现在来看买mac也是我做的最正确的选择之一。 背景概述从小接触windows到开始接触MacOS已经有17年了，从win98一直到win10，Windows系统的大部分功能、软件基本都玩过，一些专业领域的软件也都使用过，比较擅长处理各种软件问题。专业领域有软件开发、硬件编程、图像、视频、3D、音乐、效率、文档等等。同时，之前一直使用Android手机，喜欢各种搞机，XP框架、DS等各类root软件，翻遍应用市场用过各类软件。一句话就是：Windows+Android曾是我多年的习惯 概述提前概括了下Mac的优势，后面的内容都是对这些优势的详细解释。 省心稳定的MacOS买到打开就能用，不需要清理、安全之类的软件，不用担心流氓应用，各种环境的配置也非常容易，社区也非常完善，官方支持也很棒，没有什么后顾之忧，使用可靠很少卡顿崩溃，备份可靠，快捷键丰富。 良好的软件生态由于appStore的审核，软件的风格比较统一，虽然很多优秀的软件需要付费，但是其功能更加丰富专业。当然也有很多优秀的免费软件，软件的更新等通过appstore非常方便，恶意软件极少，广告、弹窗等也被严格管控。 贴近专业用户Retina和各种工具面向设计师，Unix几乎是开发者必备，强大的续航和可靠性更是满足办公的需要，还有各种专业性的软件，教育性的应用也是非常丰富。 iCloud及各种云服务通过iCloud，你的系统以及各个软件的各种设置、数据都能自动地同步到iCloud里，而所有的苹果产品都可以使用iCloud，iPhone、Mac、iPad、iwatch，Airports，所有的设备之间好像没有物理上的隔阂，密码是共享的，日历是共享的，剪切板是共享的…… Mac部分硬件 触摸板触摸板是Mac的灵魂所在，超大的触摸板能让你用很舒服的姿势任意操控，这是我拿到电脑后第二个感到惊艳的地方，苹果的ForceTouch技术，能够通过震动模拟你按下实体按键时的触感，并且有3段触感，对应移动、点击、查词（类似3DTouch）。当然，最重要的还是各种手势，3指拖曳，4指在多个桌面间切换，4指上划的应用管理，4指下划的应用内界面切换，以及下载了BetterTouchTool后的各种自定义手势，手势的体验感受就好像我们在操作一个手机或者一个PAD一样自然。（不过我一般就用基础的一些手势就够用了），基本不需要鼠标了，也再也无法忍受触摸板小的电脑了。 Retina屏幕触摸板是我第二惊艳的，屏幕当然是第一惊艳的，当我掀开盖子后屏幕自动亮起，瞬间让我看到了一个非常非常清晰锐利的画面，设计师必备。 （相机拍不出感觉，总之就是那种秒杀其他屏幕的感觉） TouchBar 差不多就是这种感觉，对于一些有各种功能的软件来说非常好用，比如各种视频、音频、图像处理的软件。ps里：Bear里：Logic里：（还有很多很多就不列举了）其他应用的话……这个就见仁见智了，值得注意的是，emoji表情可以通过他来选取，还有彩虹猫、弹球小游戏等等有趣的应用。 关于TouchBar其实一直存在争议，这个是由个人习惯等因素决定的，我用不到F1-12功能键（虽然可以按住FN键调出）一般情况下，mac上的软件的快捷键都不会用到F功能键，在某些应用场景下，TouchBar要优于键盘鼠标，如：音乐应用、播放视频时的进度条等。 蝶式键盘我一般都用的是外接键盘，没有用自带的键盘长时间输入过，给我的感觉跟按矩阵键盘一样，🌚嗯挺解压的。 另外2代蝶式键盘容易进灰导致手感黏连，苹果为这些批次的电脑的键盘提供4年保修服务（赞一个），前几天刚去到了售后服务中心，打开了键盘帽，然后发现夹进去了一个塑料片，第三代的蝶式键盘加入了一层膜就解决了容易进东西的问题（那你之前为什么想不到QAQ），总之，以后还是免不了经常去售后。 接口接口是4个TypeC加一个耳机孔，2个是全速的雷电3，可以外接显卡坞，要注意的是据说显卡只能接A卡，N卡好像需要各种设置很麻烦、深度学习等应用很吃力，建议购买云服务（服务器用的亚马逊AWS玩游戏用的Geforce NOW等）。 雷电3的话，外设都很贵，本肥宅买不起，据说能同时外接好几个4K显示器？ 支持PD2.0协议的充电宝可以为电脑供电，停电啊旅行啊啥的完全不怕，本身的10h续航再加30000mAh的充电宝，没有插座一周都不怕。 But目前TypeC的配件还不是很普及，所以拓展坞要一直带着…… 硬盘、内存3G/s的读取速度就问你怕不怕，得益于特殊技术本机复制几G的文件不用1秒。打开应用的速度也是贼快，5秒打开PS、AS、IDEA等软件。 16G运存同时开Android Studio+IDEA+Windows虚拟机+两个安卓模拟器+QQ+Chrome打开十几个网页也不卡好么。 音响。没啥好说的，就是强。 外观 CPU只能说，CPU的表现中规中矩，基本没有遇到过CPU负载不了的情况，采用低压CPU使得能耗减少了很多，续航增加了很多，有利有弊。mac上的CPU能长时间睿频不降频，得益于优秀的散热设计和CPU调度设计，这在win上时做不到的。 软件Mac上的软件非常守规矩，风格基本都是一样的，有很多很多优秀的软件，下面介绍一部分自己觉得好用的。开发者 HomeBrew ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-18%2020.47.01.png) 某个工具或者环境，windows的安装教程步骤复杂繁琐，mac一般都是几行命令就能安装完成，靠的就是这个神器，装机必备。 iTerm2 &amp; Oh-my-Zsh半透明，快捷呼出，填充啊、更换主题、历史记录等等各种强大的功能。装机必备，自行谷歌吧，功能很强大。 Oh-my-Zsh是一个开源的Zsh管理软件，Zsh应该是所有Shell里最好用的了，同时OmZ也是所有Zsh管理软件最好用的了。 Parallels DesktopMac上最强大的虚拟机软件，我用它装了一个windows10，主要是在单片机编程时用一下，他有一个融合模式，能把windows的软件窗口带到macOS中非常有趣。同时两个系统的剪切板、网络、文件都是共享的。 Xcode（免费） Xcode是苹果家的，如果你是ios开发者就必须与它打交道，我主要用它来写C++和OpenCV，界面清新，代码提示和代码自动补全，以及独特的占位填充、代码块折叠（动画不错）、搜索（动画不错）、断点（标签式的）、性能分析等设计，他让我写的程序自觉地向高效率考虑。 Dash（付费，很贵） Dash是一款API文档查询的软件，Mac和ios独有，可以方便地检索海量语言、包的各种函数、类等，可以离线查询，也可以在线Stackoverflow等查询，非常方便，同时也具备代码片管理的功能，还支持与其他各种软件的联动如使用Alfred快速查询。 SnippetsLab（付费，贵） 这是一个专门的代码片管理软件，我也是最近才下载正版，准备好好整理一波，支持各种语言，还支持语言混搭，可以把你之前写过的代码片段保存起来，以后用到时直接复制粘贴，支持iCloud和GIst同步，软件还有很多细节，可以自己体验一下，另外整理的过程才是最重要的。 CodeRunner（付费，贵） ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-18%2020.48.53.png) 之前我一直用的Sublime Text2 后来用的VSCode 再到后来遇到了这款软件，一下子喜欢上了这款软件，简单又不简单，支持很多语言，选择相应的语言然后点运行就行了。一般的代码测试没必要打开大型的IDE直接用这个软件就好了。 JetBrains全家桶（部分软件付费，部分版本付费，超级贵）这个，大家应该用过IntelliJ IDEA就再也不想用Eclipse了吧，我一般用IDEA写Java的桌面程序（顺便推荐一波JavaFX），IDEA的付费版可以支持HTML，SQL等语句的高亮。（JavaFX才能配得上MacOS好么）然后用DataGrip写数据库（虽然IDEA里有自带的数据库插件），用PyCharm写多文件的Python程序或者机器学习的东西，Android Studio当然是来写安卓了，AS在MacOS上风格非常棒，快捷键也完美。 Anaconda（免费）这个应该都很熟悉了，基本玩Python必备，我用它分了py2和py3两个环境，py2主要是用来跑一些比较老的JupterNotebook，py3主要是给Tensorflow用的，系统还自带了py2和py3，在其他应用的时候我会用这两个环境。 MathStudio（付费，很贵） ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-18%2021.23.28.png) 之前在做相机标定的时候用到过Matlab，但是Matlab实在是太笨重了，如果只是画个图分析下数据什么的还是这款软件舒服，当然它还有更多厉害的功能我还没有用到，用过Matlab的过度到这款软件比较轻松，属于神器级别。 酸酸（免费） ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-18%2021.32.19.png) 自己搭一个然后连着用，一定要多用谷歌而不是百度，要多用Stackoverflow而不是CSDN（指的解决问题），你会发现国内的文章基本都是互相复制，讨论区伸手党较多，而国外却是提问者将所有自己的理解和研究成果分析出来，别人分析他的思路很容易就能找到问题所在，并且问题和回答的内容更深刻。 SerialPort（付费，贵）由于macOS较为封闭，这种跟硬件打交道的软件我一般都在虚拟机上运行，前几天偶然发现了这款串口调试的软件，终于不用开虚拟机调了😘。 平面设计、音视频制作者 Affinity Photo（付费，超级贵） 我一直用的是PS进行一些海报制作和图像处理，最近刚接触了这款软件，这款软件可以说是为MacOS定制的，它能充分发挥MacOS的各项性能，而PS在性能优化上常年没有进步，因此可能是一个不错的选择。实际体验中感觉还是有很多PS的影子，考虑到价格非常高，不建议花大价钱购买。 Final Cut Pro X&amp; Motion（付费，超级超级贵）相当于Adobe的Pr和Ae了，平稳过渡到了FCP中，视频剪辑软件的逻辑都差不多，FCP的好处就是各种快捷键、触摸板手势、TouchBar结合的很好，所以剪视频很舒服，另外自带的字幕特效挺棒的。 Logic Pro X（付费，超级贵）Logic Pro X是苹果公司的一款专业音频制作软件，作为 Mac 上功能完备的专业录音室，Logic Pro X为音乐人提供了从创作第一个音符到完成最后的母带所需的一切。它为您带来的软件乐器与音频处理插件足以让您制作任何风格的音乐。作为一个非专业人士，主要用来改编、裁剪自己喜欢的歌曲。 工具类 MosMos是一款鼠标增强软件，对于有级滚动的鼠标滚轮，我们在浏览文字时经常轻轻动一下就很多过去了，这款软件能够让你的鼠标滚轮滚动更加平滑，并且由于Mac的鼠标方向为自然方向，与平时使用的鼠标滚轮正好是反过来的，这款软件也能帮忙把滚动方向翻转，更加符合使用习惯。 Spark最最最好用的邮件软件，好看，加上非常舒服的手势操作，以及方便的分类管理。 TimeMachineTimeMachine是苹果家的一个系统备份工具，你只需要一块硬盘，连接电脑后开始自动备份，能够回退到之前备份到任何一个版本，而且是增量备份。 Yoink Yoink是一款非常好用的“临时文件夹”，你可以把文件、图片、文字都拖到里面，不用开两个Finder，同时在网络上看到好的图片，可以直接拖到里面自动下载，之后再拖到需要粘贴到地方，非常方便。 Magnet ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/Magnet%20for%20Mac%202.1.0%20%E6%BF%80%E6%B4%BB%E7%89%88%20%E2%80%93%20%E4%BC%98%E7%A7%80%E7%9A%84%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7-%E7%88%B1%E6%83%85%E5%AE%88%E6%9C%9B%E8%80%85.jpeg) 这是一款非常好用的屏幕管理软件，你可以拖拽一个窗口到指定的位置就可以方便地进行分屏，当然如果你牢记快捷键的话，你可以得到更好的体验。 CheatSheetMac上的快捷键数量众多，有时候可能会忘记，尤其是自己在系统和各个软件中定义了好多好多快捷键，于是这款软件的优势就显现出来了，只需要按住command键，就可以显示当前窗口下所有的快捷键了。 Paste使用快捷键在屏幕底部弹出，记录了所有剪切板记录，还能进行分类搜索，iCloud同步后与iPhone与iPad的剪切板就共享了，神器。 RescueTIme是我用来记录平时电脑的使用情况的一款软件，用来查看自己一天用电脑做了些什么，他对你的软件进行分类并给你一个今天的效率评分，量化你的时间使用情况。 Dropbox ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-26%2021.04.47.png) DropBox是我目前用过体验最好的云盘（完爆某度），当然缺点也是挺多，首先必须科学上网，其次是免费版账户的容量比较小。不过掩盖不了他带来的各种便利，他跟很多的软件都有联动，你会感觉这块云盘跟你的电脑硬并没有什么区别，而且带有历史记录工具，我会把一些重要的东西和一些资料放在里面。 Google 备份与同步哈？你问我为什么用了这么多云存储？当然是各有用处了，Google备份与同步我主要用来使用其中的Colab，通过本地的同步文件夹可以很方便地将自己的数据集和网络文件等同步到服务器上，然后就可以使用Colab提供的免费GPU（Tesla P40）以及TPU！麻麻再也不用担心我的Mac跑不出来模型了！ PDF Expert（付费，超贵）应该是最好用的PDF编辑软件了，可以把PDF中的图片复制出来，里面的文字也是能直接复制出来，丰富的工具几乎能满足你关于PDF的一切需求。 iCollection 这个主要是一个桌面挂件软件，由于iCloud的是一起将桌面和文稿文件夹上传备份的，桌面上我不会放任何东西，这样就使得我去找某个文件夹都要打开Finder然后进入复杂的文件夹迷宫中，所以我把经常用到的文件夹通过iCollection放在了桌面上并设置自动隐藏。 Ominifocus学习成本巨高的一款软件，在b站有一个搬运的系列视频，全英文无字幕，我记得当时看了好久之后才懂得这个软件如何使用，https://www.bilibili.com/video/av15747467?from=search&amp;seid=2274811105139888870，软件大致的意思是使用收件箱、项目、区域、检查等对你的计划进行分解归类，在使用Things一段时间后发现他虽然简单但是在某些应用上（尤其是循环执行对任务不可修改）很烦琐，所以最后又投入了Focus的怀抱中。 Ominigraffle Ominiplan 文字 Bear 本文就是用这个软件写的，应该是我目前用过的Markdown编辑软件中最好看、体验最好的了，Pro版本可以导出多种格式还可以iCloud同步，在手机上能接着编辑，可惜不支持图片自定义大小、LaTeX和表格，好消息是作者已经把Web版和这些功能的开发提上日程了。 TyporaMarkdown编辑软件，支持逐行显示，支持LaTeX公式编辑，以及各种格式的导出，还有方便的表格等工具，Github开源项目，完全免费、持续更新,良心软件啊，写论文神器。 学生 Things ![](%E6%88%91%E4%B8%8EMac%E7%9A%84365%E5%A4%A9/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-26%2020.23.05.png) Things3 是一款非常好用的TODO类型的软件，连续好几年获得了苹果最佳设计奖，学习成本还可以，适合大多数的应用场景，有兴趣了解的话可以去看看教程 ，不过教程基本都在Youtube上，全英文，也可以看国内的教程，但是国内的教程不是很全面。 Fantastical 2Fantastical是一款日历式的待办事项软件，有日周月年等视图，并且与iCloud的日历与待办事项结合，在这里规划的日程，所有的设备都能收到及时的通知。添加日程、浏览日程的体验非常好，与Things结合着使用，效果非常好。 Evernote印象笔记的最大优势在于收集，我会把很多PDF、网页、图片结合各浏览器的插件直接保存到软件里，他的搜索功能很强大，我一般不进行分类啥的，要用就直接搜索，他跟其他软件的联动比较多，可以很方便地把笔记导出到其他软件中进行进一步整理编辑。 MarginNote这里指的是iPad上的MarginNote应用，Mac版的只是用来同步浏览和编辑使用。 MindNode（请忽略当时刚开始用思维导图的我画的凌乱的线）一般我都用百度脑图就足够了，而且之前MindNode总是会突然崩溃所以没有怎么用，后来某次更新后就可以用了，外观要比百度脑图好上不少，渐渐地我会在这个上面写，思维导图是一个很好的梳理思路的工具，真的很推荐大家学习使用。 篇幅有限，以下部分在下一篇文章分享 操作系统 Mac使用的是基于Unix的MacOS系统，目前已经更新到Mojave，与Windows有很大的差别，首先，对于一台刚拿到的Windows电脑，你需要进行各种设置，需要下驱动、打补丁、下载各种安全软件、浏览器等等，而你拿到一台Ma后这些工作你都可以省去，给我影响最深的是如果你想下载一个互联网上的软件，会有各种烦人的下载器以及各种捆绑软件，以及不断点Next，而得益于AppStore的高管控力度，MacOS上的软件都非常老实，在互联网上下载软件的安装包双击、拖动一下就安好了，删除也同样简单，就像删除一个文件一样简单，并且不会有各种残留文件。另外Mac OS的安全性也更高，你不会遇到计算机病毒，也不用担心系统漏洞，及时的系统与软件更新以及AppStore的支持是良好的保障。 一般Mac不需要关机，只需要把盖子合上，需要用时再掀开立马就能恢复你之前的所有工作，Mac有三种睡眠模式，第一种是不断电，所有的数据保留在内存中，优点是能够快速响应；第二种模式是将全部内存镜像写入硬盘中，优点是省电；第三种就是两种的结合了，一般我们用的都是第三种模式。 iCloud部分苹果的产品得益于其健全的生态环境，而多种设备连接起来的桥梁和核心就是icloud，icloud允许不同端的设备在云中创建自己的数据文件夹，并实时共享。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>软件推荐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[校园导游&地图导航系统概述]]></title>
    <url>%2F2018%2F03%2F11%2F%E6%A0%A1%E5%9B%AD%E5%AF%BC%E6%B8%B8%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[校园导游&amp;地图导航系统 系统功能介绍 提供景点信息查询并打开介绍页图片 提供两点间最短路径查询并动态演示 多个点的最佳路径查询 模糊搜索景点名称 遇到复杂路口时显示路口实景 图形化显示和放大镜功能提供 提供两点间所有路径查询动态演示、将所有的路径存入链表中便于后期筛选 本文主要介绍的是整个系统的概述，加粗部分模块包括其代码及算法将另开文详细介绍 技术实现 文件存储有关图的信息，有邻接矩阵和点的位置坐标文件，还有一个存储景点的名称及对应序号的文件 每个景点对应唯一的编号，同时会有只用来表示连通关系的中转点，前n个为景点，后m个为中转点，中转点无法被查询，但是在显示路径中会被加入 点的坐标测定以及介绍页的制作使用photoshop完成 使用opencv实现可视化操作 通过点的坐标与连通关系以及地图的比例尺（每像素代表多少米）计算距离 修改后的深度优先遍历方法寻找两点间所有路径 dijkstra算法求两点间最短距离 通过对选出的几个点的最短路径的长度的排列组合，选出其中连接这几个点的最短的路径 动态演示通过在两点间不断画线不断更新视图实现 各函数功能介绍Dynamic_Show()函数：一条路径的动态演示 根据一个路径数组动态演示路径，使用OpenCV鼠标事件实现鼠标跟随放大功能。鼠标事件函数在动态演示完成后自动调用，能够让用户看清路径的细节，当演示的路线（红线）到达复杂路口（一般为不容易找到的路）时，自动打开实景图。由于OpenCV没有缓存清除函数，无法像OpenGL之类方便画出动画，我使用了cvWaitKey（）函数作为延时函数，将两点间的路径划分为若干直线，每条路径划分DYNAMIC_NUM条小直线，每画一条小直线就显示一次，这样还意外实现了走大路时动画快，转弯时动画慢的人性化要求，更改其数值可调整动画速度，为了压缩内存，只对原图进行由map1ROI区域控制的显示并只在演示完后进行绘制，而使用缩略图mapshow进行动态绘制，大大减少了内存占用。MOUSE()函数：鼠标跟随放大镜 监听鼠标事件，当鼠标移动时根据xy的值计算并设置map1和mapshow的ROI区域，算法的关键在于判断边界情况，由于绘制的区域为正方形（大小可设置），因此当鼠标移动到边界附近时会出现设置区域超出图形的错误导致程序出错，所以我使用if函数罗列所有边界情况并进行处理于是就实现了鼠标在边界附近时就好像有堵墙一样的效果。Static_Show()函数：多条路径的动态演示 由于Dynamic_Show()函数动态演示用时过长，并且输出所有路径时路径的数量较多，所以使用本函数，以一整条路径为单位进行动态演示，每0.5秒刷新一次，能够检查路径的正确性，使用RNG类为路径赋予随机颜色。Show_All()函数：显示所有路径、节点、节点编号 通过检测Matrix（邻接矩阵）和Points（点的坐标）来输出一副含有所有路径和所有点以及所有程序内部编号的图，用于检测是否录入数据正确。也是使用了随机颜色。画线使用了line()函数，画圆使用了circle()函数，输出编号使用了putText()函数。DFS()函数：输出两点间所有路径 使用非递归方法，另开一文介绍MH_Search()函数：模糊搜索、查找 模糊搜索函数，考虑到游客可能输入不对或输入不全学校景点的名字，使用这个函数可以自动匹配含有输入字符的景点，同时也支持精确查找。使用goto语句是为了简化函数结构。输入y可确认模糊匹配结果、n可否定结果并继续匹配、e可跳出模糊搜索重新输入使用精确搜索。主要使用了string类型里的函数find（），它可以搜索string类型中是否含有字符串，并返回它出现的次序，如果没有则返回为-1。SearchData()函数：打开介绍页 通过使用模糊搜索，打开对应的介绍页的图片文件，主要是利用了被重载的+运算符的性质，使其可以直接合成一个文件路径。Show_Real()函数：打开复杂路口实景 与SearchData函数类似，区别就是上层函数加了个判断，如果出现有路口实景图的点的编号则调用这个函数，函数有两个参数，通过这两个参数打开预先存放好的实景图片文件。MapShow()函数：完整显示校园地图 由于原图过大，因此为用户展示的窗口使用CV_INTER_AREA方式压缩，使用此压缩方式可以有效去除压缩时产生的斜纹，并将程序占用内存由2G多降低到100M左右，同时，设定了一个缩放倍数scale,可以根据不同系统、不同屏幕、不同分辨率进行调整。]]></content>
  </entry>
  <entry>
    <title><![CDATA[博客的第一篇文章]]></title>
    <url>%2F2017%2F11%2F30%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[博客的第一篇文章 建站目的 今后打算 随想 建站目的lim_{1\to+\infty}P(|\frac{1}{n}\sum_i^nX_i-\mu|]]></content>
      <tags>
        <tag>text</tag>
      </tags>
  </entry>
</search>
